version: '3.8'

services:
    backend:
        restart: always
        build: 
            context: ./server
            dockerfile: Dockerfile.dev
        command: python manage.py run --host=0.0.0.0 --port=5000
        volumes:
            - ./server:/usr/src/order-manager/server
        ports: 
            - 5000:5000
        environment:
        - FLASK_APP=app
        - FLASK_ENV=development
        - FLASK_DEBUG=1
        depends_on:
            - db
        networks:
            - expense-control-net
        

    client:
        build: 
            context: ./client
            dockerfile: Dockerfile.dev
        volumes:
            - ./client:/usr/src/order-manager/client
            - /usr/src/order-manager/client/node_modules
            - /usr/src/order-manager/client/.next
        ports: 
            - 3000:3000
        command: sh -c "npm install && npm run dev"
        environment: 
            - CHOKIDAR_USEPOLLING=true
        networks:
            - expense-control-net

    db:
        restart: always
        image: postgres:11
        container_name: expense-control-db
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - ./postgres-data/postgres:/var/lib/postgresql/data
        networks:
            - expense-control-net
    
networks:
    expense-control-net:
        driver: bridge
    